{
  "openapi": "3.0.1",
  "info": {
    "title": "OpenAPI ESO",
    "description": "ESO",
    "license": {
      "name": "MIT"
    },
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://v2.easystreetoffers.com/api/v2"
    }
  ],
  "security": [
    {
      "ApiKeyAuth": []
    }
  ],
  "paths": {
    "/buyer/lead": {
      "post": {
        "summary": "Submit a buyer lead",
        "description": "Submit a new buyer lead for ESO partner..",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                  "required": [
                    "first_name",
                    "last_name",
                    "primary_email",
                    "primary_phone",
                    "property_address"
                  ],
                  "type": "object",
                  "properties": {
                    "first_name": {
                      "type": "string",
                      "format": "string"
                    },
                    "last_name": {
                      "type": "string",
                      "format": "string"
                    },
                    "primary_email": {
                      "type": "string",
                      "format": "string"
                    },
                    "primary_phone": {
                      "maxLength": 16,
                      "type": "string",
                      "format": "character varying"
                    },
                    "property_address": {
                      "type": "object",
                      "required": [
                        "inventory_property_id",
                        "offer_request_id"
                      ],
                      "properties": {
                        "inventory_property_id": { "type": "integer" },
                        "offer_request_id": { "type": "integer" }
                      }
                    }
                   
                  }
                },
              "example": {
                "first_name": "My lead",
                "last_name": "Test",
                "primary_email": "lead@yourdomain.com",
                "primary_phone": "+1111111",
                "property_address": {
                  "offer_request_id": 56641,
                  "inventory_property_id": 116775
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Lead created successfully",
            "content": {
              "application/json": {
                "example": {
                  "created_at": "2025-08-12T17:12:20.542288+00:00",
                  "lead_id": "6e22e8e3-0533-xxxx-xxxx-xxxxxxxxxx",
                  "first_name": "My lead",
                  "last_name": "Test",
                  "primary_email": "lead@yourdomain.com",
                  "primary_phone": "+1111111",
                  "api_partner_user_id": "e83d3b1f-ed37-xxxx-xxxx-xxxxxxxxxxx",
                  "inventory_property_id": 116775,
                  "offer_request_id": 56641
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "created_at": { "type": "string", "format": "date-time" },
                    "lead_id": { "type": "string" },
                    "first_name": { "type": "string" },
                    "last_name": { "type": "string" },
                    "primary_email": { "type": "string" },
                    "primary_phone": { "type": "string" },
                    "api_partner_user_id": { "type": "string" },
                    "inventory_property_id": { "type": "integer" },
                    "offer_request_id": { "type": "integer" }
                  }
                }
              }
            }
          },
          "400": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/offer-requests": {
      "post": {
        "description": "Creates an offer request. ",
        "requestBody": {
          "description": "New offer request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/offer_request"
              },
              "example": {
                "request": {
                  "offer_request_asking": 3900000,
                  "test": true
                },
                "property": {
                  "StreetNumber": "123",
                  "StreetName": "Easy St",
                  "City": "Easy",
                  "StateOrProvince": "CA",
                  "PostalCode": "12345",
                  "UnitNumber": "1",
                  "Stories": 1,
                  "BedroomsTotal": 3,
                  "BathroomsFull": 3,
                  "BathroomsHalf": 0,
                  "YearBuilt": 1951,
                  "Longitude": -121.999418,
                  "Latitude": 37.8450264,
                  "LivingArea": 2400,
                  "ListPrice": 2654000,
                  "MlsStatus": "Off-market",
                  "Notes": "",
                  "Sewer": [
                    "Public Sewer"
                  ],
                  "SpaYN": false,
                  "GarageYN": true,
                  "CarportYN": false,
                  "BasementYN": false,
                  "WaterSource": [
                    "Public"
                  ],
                  "GarageSpaces": 1,
                  "OccupantType": "Owner",
                  "OtherParking": "Attached",
                  "AssociationYN": true,
                  "OpenParkingYN": false,
                  "PoolPrivateYN": false,
                  "AssociationFee": 0,
                  "StandardStatus": "Off Market",
                  "LivingAreaUnits": "Square Feet",
                  "PropertySubType": "Single Family Residence",
                  "AttachedGarageYN": false,
                  "LotSizeSquareFeet": 21000,
                  "SeniorCommunityYN": false,
                  "PowerProductionType": "",
                  "ConstructionMaterials": [
                    "Wood Framing"
                  ],
                  "AssociationFeeFrequency": "Monthly"
                },
                "media": [
                  "https://picsum.photos/200"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "successful request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/offer_requests"
                }
              }
            }
          },
          "400": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "get": {
        "description": "Returns all the current offer-requests from the system that the user has access to",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Offer request response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/offer_request"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/offer-requests/{offer_request_id}": {
      "get": {
        "description": "Get a single offer request based on the ID supplied",
        "parameters": [
          {
            "name": "offer_request_id",
            "in": "path",
            "description": "ID of plant to delete",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Offer request response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/offer_request"
                }
              }
            }
          },
          "400": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "patch": {
        "description": "Updates an offer request",
        "parameters": [
          {
            "name": "offer_request_id",
            "in": "path",
            "description": "ID of offer request to update",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "description": "Preliminary Matches",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/offer_request"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "deleted",
            "content": {}
          },
          "400": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/offer-requests/prelim": {
      "post": {
        "description": "Get Preliminary Buyer & Buy Box Matches",
        "requestBody": {
          "description": "Preliminary Matches",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/inventory"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "successful request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/prelim-match"
                }
              }
            }
          },
          "400": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/offers": {
      "post": {
        "description": "Make an offer on a property. ",
        "requestBody": {
          "description": "New offer",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/offers_request"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "successful request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/offers"
                }
              }
            }
          },
          "400": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "get": {
        "description": "Returns all offers on your offer requests or the offers you made.",
        "responses": {
          "200": {
            "description": "Offers response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/offers"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/offers/{offer_id}": {
      "get": {
        "description": "Get details of a specific offer.",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of results to return",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Offers response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/offers"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "patch": {
        "description": "Respond to an offer.",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of results to return",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Offers response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/offers"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/counter-offers": {
      "post": {
        "description": "Make an offer on a property. ",
        "requestBody": {
          "description": "New offer",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/counter_offers_request"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "successful request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/offers"
                }
              }
            }
          },
          "400": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "get": {
        "description": "Returns all offers on your offer requests or the offers you made.",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of results to return",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Offers response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/offers"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/counter-offers/{counter_offer_id}": {
      "get": {
        "description": "Get details of a specific offer.",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of results to return",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Offers response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/offers"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "patch": {
        "description": "Respond to an offer.",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of results to return",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Offers response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/offers"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/wh": {
      "post": {
        "description": "Created a webhook to receive notifications on offers and requests.",
        "requestBody": {
          "description": "New callback url",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook_request"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "webhook url created"
          },
          "400": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "patch": {
        "description": "Update your callback url.",
        "requestBody": {
          "description": "Update callback url",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook_request"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "webhook url updated"
          },
          "400": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "offer_request": {
        "type": "object",
        "properties": {
          "request": {
            "$ref": "#/components/schemas/offer_requests_request"
          },
          "property": {
            "description": "property fields named with Pascal Case convention follow the RESO 2.0 standard",
            "$ref": "#/components/schemas/inventory_properties_request"
          },
          "assumptions": {
            "description": "Analyst assumptions. Only available to buyers",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/analyst_assumptions"
            }
          },
          "media": {
            "description": "List of signed URLs. Note that the URLs will become invalid after 10 minutes.",
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "offer_requests": {
        "type": "object",
        "properties": {
          "offer_request_asking": {
            "type": "integer",
            "description": "Asking price for the property",
            "format": "bigint"
          },
          "offer_request_status": {
            "type": "string",
            "format": "string",
            "enum": [
              "receiving_offers",
              "in_review",
              "expired",
              "denied",
              "no_offers",
              "in_submission",
              "pending_approval"
            ],
            "description": "Offer request statuses:\n * `receiving_offers` - Offer Request is active and receiving cash offers.\n * `in_review` - Offer request is pending review by our analysts, and are not yet sent to buyers. \n * `expired` - Offer request has expired and is ready to be renewed. \n * `denied` - Offer request does not meet our criteria, and has been denied. \n * `no_offers` - Offer request has not received any offers, and is ready to be refreshed. \n * `in_submission` - Offer request is incomplete. \n * `pending_approval` - Offer request has been reviewed, and is pending final approval process."
          },
          "offer_requested_at": {
            "type": "string",
            "format": "timestamp with time zone",
            "description": "timestamp with time zone",
            "default": "now()"
          },
          "offer_requested_decided_by": {
            "type": "string",
            "format": "uuid"
          },
          "offer_request_is_mls": {
            "type": "boolean",
            "description": "Is the property for the offer request listed on MLS",
            "format": "boolean"
          },
          "offer_request_deal_type": {
            "type": "string",
            "format": "text"
          },
          "offer_request_expires_at": {
            "type": "string",
            "format": "timestamp with time zone",
            "description": "timestamp with time zone"
          },
          "offer_request_is_approved": {
            "type": "boolean",
            "description": "Field is true after we have approved the offer request to be sent to buyers.",
            "format": "boolean"
          },
          "offer_request_decided_at": {
            "type": "string",
            "format": "timestamp with time zone",
            "description": "timestamp with time zone"
          },
          "offer_request_viewed_at": {
            "type": "string",
            "format": "timestamp with time zone",
            "description": "timestamp with time zone"
          },
          "offer_request_refreshed_at": {
            "type": "string",
            "format": "timestamp with time zone",
            "description": "timestamp with time zone"
          },
          "inventory_property_id": {
            "type": "integer",
            "description": "Used to uniquely identify the property in our system. Can safely ignore",
            "format": "bigint"
          },
          "test": {
            "type": "boolean",
            "format": "boolean",
            "description": "set to true s"
          }
        }
      },
      "offer_requests_request": {
        "type": "object",
        "properties": {
          "offer_request_asking": {
            "type": "integer",
            "format": "bigint"
          },
          "test": {
            "type": "boolean",
            "format": "boolean",
            "description": "set to true s"
          }
        }
      },
      "inventory": {
        "type": "object",
        "properties": {
          "StateOrProvince": {
            "type": "string",
            "example": "CA"
          },
          "PostalCode": {
            "type": "string",
            "example": "94507"
          },
          "BedroomsTotal": {
            "type": "integer",
            "example": 3
          },
          "BathroomsFull": {
            "type": "integer",
            "example": 2
          },
          "LivingArea": {
            "type": "integer",
            "example": 2650
          },
          "LotSizeSquareFeet": {
            "type": "integer",
            "example": 6000
          },
          "ParkingTotal": {
            "type": "integer",
            "example": 2
          },
          "YearBuilt": {
            "type": "integer",
            "example": 1990
          },
          "ListPrice": {
            "type": "integer",
            "example": 250000
          },
          "OccupantType": {
            "type": "string",
            "example": "Owner"
          },
          "PoolPrivateYN": {
            "type": "boolean",
            "example": false
          },
          "StandardStatus": {
            "type": "string",
            "example": "Off-market"
          }
        }
      },
      "prelim-match": {
        "type": "object",
        "properties": {
          "matchCount": {
            "type": "integer",
            "description": "Number of buyers your submission matched",
            "example": 34
          },
          "buyBoxesCount": {
            "type": "integer",
            "description": "Number of buy boxes your submission matched",
            "example": 80
          }
        }
      },
      "offers": {
        "required": [
          "offer_amount"
        ],
        "type": "object",
        "properties": {
          "offer_id": {
            "type": "integer",
            "format": "bigint"
          },
          "buyer_id": {
            "type": "string",
            "format": "uuid"
          },
          "offer_request_id": {
            "type": "integer",
            "format": "bigint"
          },
          "created_at": {
            "type": "string",
            "format": "timestamp with time zone",
            "description": "timestamp with time zone",
            "default": "now()"
          },
          "offer_amount": {
            "type": "integer",
            "format": "bigint"
          },
          "offer_expires": {
            "type": "string",
            "format": "timestamp with time zone",
            "description": "timestamp with time zone"
          },
          "buyer_pays_buyer_broker_commission": {
            "type": "boolean",
            "format": "boolean",
            "description": "If true, buyer pays the buyer broker commission equal to 3% of the offer amount. If false, seller will pay the buyer broker commission equal to 3% of the offer amount."
          },
          "buyer_pays_listing_broker_commission": {
            "type": "boolean",
            "format": "boolean",
            "description": "If true, buyer pays the listing broker commission set by the agent. If false, seller will pay listing agent commission."
          },
          "buyer_broker_commission_pct": {
            "type": "number",
            "format": "numeric"
          },
          "buyer_broker_commission_amt": {
            "type": "integer",
            "format": "bigint"
          },
          "listing_broker_commission_pct": {
            "type": "number",
            "format": "numeric"
          },
          "listing_broker_commission_amt": {
            "type": "integer",
            "format": "bigint"
          },
          "net_proceeds_to_seller": {
            "type": "integer",
            "format": "bigint"
          },
          "net_cost_to_buyer": {
            "type": "integer",
            "format": "bigint"
          },
          "offer_memo": {
            "type": "string",
            "format": "text"
          },
          "offer_status": {
            "type": "string",
            "format": "text"
          },
          "additional_terms": {
            "type": "object",
            "format": "jsonb"
          },
          "earnest_money": {
            "type": "integer",
            "format": "integer"
          },
          "em_hard_post_inspection": {
            "type": "boolean",
            "format": "boolean"
          },
          "lease_back": {
            "type": "boolean",
            "format": "boolean"
          },
          "lease_back_period": {
            "type": "integer",
            "format": "integer"
          },
          "flexible_closing": {
            "type": "boolean",
            "format": "boolean"
          },
          "post_possession": {
            "type": "boolean",
            "format": "boolean"
          },
          "waive_warranty": {
            "type": "boolean",
            "format": "boolean"
          },
          "inspection_period": {
            "type": "integer",
            "format": "integer"
          },
          "post_possession_period": {
            "type": "integer",
            "format": "integer"
          },
          "offer_is_counter_offer": {
            "type": "boolean",
            "format": "boolean"
          },
          "offer_decided_at": {
            "type": "string",
            "format": "timestamp with time zone",
            "description": "timestamp with time zone"
          },
          "offer_internal_memo": {
            "type": "string"
          },
          "test": {
            "type": "boolean",
            "format": "boolean",
            "description": "set to true s"
          }
        }
      },
      "offers_request": {
        "required": [
          "offer_request_id",
          "offer_amount"
        ],
        "type": "object",
        "properties": {
          "offer_request_id": {
            "type": "integer",
            "format": "bigint"
          },
          "offer_amount": {
            "type": "integer",
            "format": "bigint"
          },
          "offer_expires": {
            "type": "string",
            "format": "timestamp with time zone",
            "description": "timestamp with time zone"
          },
          "offer_memo": {
            "type": "string",
            "format": "text"
          },
          "additional_terms": {
            "type": "object",
            "format": "jsonb"
          },
          "earnest_money": {
            "type": "integer",
            "format": "integer"
          },
          "em_hard_post_inspection": {
            "type": "boolean",
            "format": "boolean"
          },
          "lease_back": {
            "type": "boolean",
            "format": "boolean"
          },
          "lease_back_period": {
            "type": "integer",
            "format": "integer"
          },
          "flexible_closing": {
            "type": "boolean",
            "format": "boolean"
          },
          "post_possession": {
            "type": "boolean",
            "format": "boolean"
          },
          "waive_warranty": {
            "type": "boolean",
            "format": "boolean"
          },
          "inspection_period": {
            "type": "integer",
            "format": "integer"
          },
          "post_possession_period": {
            "type": "integer",
            "format": "integer"
          },
          "test": {
            "type": "boolean",
            "format": "boolean",
            "description": "set to true s"
          }
        }
      },
      "counter_offers": {
        "required": [
          "counter_offer_id",
          "created_at"
        ],
        "type": "object",
        "properties": {
          "counter_offer_id": {
            "type": "integer",
            "description": "Note:\nThis is a Primary Key.<pk/>",
            "format": "bigint"
          },
          "created_at": {
            "type": "string",
            "format": "timestamp with time zone",
            "description": "timestamp with time zone",
            "default": "now()"
          },
          "agent_id": {
            "type": "string",
            "description": "Note:\nThis is a Foreign Key to `agents.agent_id`.<fk table='agents' column='agent_id'/>",
            "format": "uuid"
          },
          "offer_id": {
            "type": "integer",
            "description": "Note:\nThis is a Foreign Key to `offers.offer_id`.<fk table='offers' column='offer_id'/>",
            "format": "bigint"
          },
          "counter_offer_amount": {
            "type": "integer",
            "format": "bigint"
          },
          "buyer_pays_buyer_broker_commission": {
            "type": "boolean",
            "format": "boolean",
            "description": "If true, buyer pays the buyer broker commission equal to 3% of the offer amount. If false, seller will pay the buyer broker commission equal to 3% of the offer amount."
          },
          "buyer_pays_listing_broker_commission": {
            "type": "boolean",
            "format": "boolean"
          },
          "buyer_broker_commission_pct": {
            "type": "number",
            "format": "numeric"
          },
          "buyer_broker_commission_amt": {
            "type": "integer",
            "format": "bigint"
          },
          "listing_broker_commission_pct": {
            "type": "number",
            "format": "numeric"
          },
          "listing_broker_commission_amt": {
            "type": "integer",
            "format": "bigint"
          },
          "net_proceeds_to_seller": {
            "type": "integer",
            "format": "bigint"
          },
          "net_cost_to_buyer": {
            "type": "integer",
            "format": "bigint"
          },
          "counter_offer_expires": {
            "type": "string",
            "format": "timestamp with time zone",
            "description": "timestamp with time zone"
          },
          "counter_offer_memo": {
            "type": "string",
            "format": "text"
          },
          "counter_offer_terms": {
            "type": "object",
            "format": "jsonb"
          },
          "counter_offer_status": {
            "type": "string",
            "format": "text"
          },
          "counter_earnest_money": {
            "type": "integer",
            "format": "integer"
          },
          "counter_em_hard_post_inspection": {
            "type": "boolean",
            "format": "boolean"
          },
          "counter_lease_back": {
            "type": "boolean",
            "format": "boolean"
          },
          "counter_lease_back_period": {
            "type": "integer",
            "format": "integer"
          },
          "counter_flexible_closing": {
            "type": "boolean",
            "format": "boolean"
          },
          "counter_post_possession": {
            "type": "boolean",
            "format": "boolean"
          },
          "counter_waive_warranty": {
            "type": "boolean",
            "format": "boolean"
          },
          "counter_inspection_period": {
            "type": "integer",
            "format": "integer"
          },
          "counter_post_possession_period": {
            "type": "integer",
            "format": "integer"
          },
          "test": {
            "type": "boolean",
            "format": "boolean",
            "description": "set to true s"
          }
        }
      },
      "counter_offers_request": {
        "type": "object",
        "properties": {
          "offer_id": {
            "type": "integer",
            "format": "bigint"
          },
          "counter_offer_amount": {
            "type": "integer",
            "format": "bigint"
          },
          "counter_offer_memo": {
            "type": "string",
            "format": "text"
          },
          "counter_offer_expires": {
            "type": "string",
            "format": "timestamp with time zone",
            "description": "timestamp with time zone"
          },
          "counter_offer_terms": {
            "type": "object",
            "format": "jsonb"
          },
          "counter_offer_status": {
            "type": "string",
            "format": "text"
          },
          "counter_earnest_money": {
            "type": "integer",
            "format": "integer"
          },
          "counter_em_hard_post_inspection": {
            "type": "boolean",
            "format": "boolean"
          },
          "counter_lease_back": {
            "type": "boolean",
            "format": "boolean"
          },
          "counter_lease_back_period": {
            "type": "integer",
            "format": "integer"
          },
          "counter_flexible_closing": {
            "type": "boolean",
            "format": "boolean"
          },
          "counter_post_possession": {
            "type": "boolean",
            "format": "boolean"
          },
          "counter_waive_warranty": {
            "type": "boolean",
            "format": "boolean"
          },
          "counter_inspection_period": {
            "type": "integer",
            "format": "integer"
          },
          "counter_post_possession_period": {
            "type": "integer",
            "format": "integer"
          },
          "test": {
            "type": "boolean",
            "format": "boolean",
            "description": "set to true s"
          }
        }
      },
      "analyst_assumptions": {
        "type": "object",
        "properties": {
          "assumption_id": {
            "type": "integer",
            "description": "Identifies assumptions.",
            "format": "bigint"
          },
          "created_at": {
            "type": "string",
            "format": "timestamp with time zone",
            "default": "now()"
          },
          "inventory_property_id": {
            "type": "integer",
            "description": "The property to which these assumptions apply.",
            "format": "bigint"
          },
          "ltr_monthly_rent": {
            "type": "integer",
            "format": "bigint"
          },
          "ltr_annual_rent_increase": {
            "type": "number",
            "format": "double precision"
          },
          "ltr_arv": {
            "type": "integer",
            "format": "bigint"
          },
          "ltr_renovation_cost": {
            "type": "integer",
            "format": "bigint"
          },
          "str_season_1_daily_rate": {
            "type": "integer",
            "format": "bigint"
          },
          "str_season_2_daily_rate": {
            "type": "integer",
            "format": "bigint"
          },
          "str_season_3_daily_rate": {
            "type": "integer",
            "format": "bigint"
          },
          "str_season_4_daily_rate": {
            "type": "integer",
            "format": "bigint"
          },
          "str_arv": {
            "type": "integer",
            "format": "bigint"
          },
          "str_renovation_cost": {
            "type": "integer",
            "format": "bigint"
          },
          "rr_weekly_rent_per_room": {
            "type": "integer",
            "format": "bigint"
          },
          "rr_arv": {
            "type": "integer",
            "format": "bigint"
          },
          "rr_beds": {
            "type": "integer",
            "format": "smallint"
          },
          "rr_baths": {
            "type": "integer",
            "format": "smallint"
          },
          "ff_arv": {
            "type": "integer",
            "format": "bigint"
          },
          "ff_renovation_cost": {
            "type": "integer",
            "format": "bigint"
          },
          "property_annual_tax": {
            "type": "integer",
            "format": "bigint"
          },
          "property_annual_hoa": {
            "type": "integer",
            "format": "bigint"
          },
          "rr_renovation_cost": {
            "type": "integer",
            "format": "bigint"
          },
          "reno_items": {
            "type": "array",
            "items": {
              "type": "object"
            }
          },
          "fmv": {
            "type": "integer",
            "format": "bigint"
          }
        }
      },
      "webhook_request": {
        "type": "object",
        "properties": {
          "url": {
            "type": "string",
            "format": "uri",
            "example": "https://example.com/webhook"
          }
        }
      },
      "inventory_properties": {
        "type": "object",
        "properties": {
          "StreetNumber": {
            "maxLength": 25,
            "type": "string",
            "format": "character varying"
          },
          "StreetName": {
            "maxLength": 50,
            "type": "string",
            "format": "character varying"
          },
          "UnitNumber": {
            "maxLength": 25,
            "type": "string",
            "format": "character varying"
          },
          "PostalCity": {
            "maxLength": 50,
            "type": "string",
            "format": "character varying"
          },
          "StateOrProvince": {
            "maxLength": 2,
            "type": "string",
            "format": "character varying"
          },
          "PostalCode": {
            "maxLength": 10,
            "type": "string",
            "format": "character varying"
          },
          "MlsStatus": {
            "maxLength": 50,
            "type": "string",
            "format": "character varying"
          },
          "BedroomsTotal": {
            "type": "number",
            "format": "numeric"
          },
          "BathroomsFull": {
            "type": "number",
            "format": "numeric"
          },
          "BathroomsHalf": {
            "type": "number",
            "format": "numeric"
          },
          "Latitude": {
            "type": "number",
            "format": "numeric"
          },
          "Longitude": {
            "type": "number",
            "format": "numeric"
          },
          "AssociationFee": {
            "type": "number",
            "format": "numeric"
          },
          "AssociationFee2": {
            "type": "number",
            "format": "numeric"
          },
          "AssociationFee2Frequency": {
            "maxLength": 25,
            "type": "string",
            "format": "character varying"
          },
          "AssociationFeeFrequency": {
            "maxLength": 25,
            "type": "string",
            "format": "character varying"
          },
          "AssociationYN": {
            "type": "boolean",
            "format": "boolean"
          },
          "AttachedGarageYN": {
            "type": "boolean",
            "format": "boolean"
          },
          "Basement": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "BasementYN": {
            "type": "boolean",
            "format": "boolean"
          },
          "BathroomsOneQuarter": {
            "type": "number",
            "format": "numeric"
          },
          "BathroomsPartial": {
            "type": "number",
            "format": "numeric"
          },
          "BathroomsThreeQuarter": {
            "type": "number",
            "format": "numeric"
          },
          "CarportSpaces": {
            "type": "number",
            "format": "numeric"
          },
          "CarportYN": {
            "type": "boolean",
            "format": "boolean"
          },
          "City": {
            "maxLength": 50,
            "type": "string",
            "format": "character varying"
          },
          "CountyOrParish": {
            "maxLength": 50,
            "type": "string",
            "format": "character varying"
          },
          "CoveredSpaces": {
            "type": "number",
            "format": "numeric"
          },
          "GarageSpaces": {
            "type": "number",
            "format": "numeric"
          },
          "GarageYN": {
            "type": "boolean",
            "format": "boolean"
          },
          "HistoryTransactional": {
            "maxLength": 255,
            "type": "string",
            "format": "character varying"
          },
          "Levels": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "ListAgent": {
            "maxLength": 255,
            "type": "string",
            "format": "character varying"
          },
          "ListAgentDirectPhone": {
            "maxLength": 16,
            "type": "string",
            "format": "character varying"
          },
          "ListAgentEmail": {
            "maxLength": 80,
            "type": "string",
            "format": "character varying"
          },
          "ListAgentFullName": {
            "maxLength": 150,
            "type": "string",
            "format": "character varying"
          },
          "ListOffice": {
            "maxLength": 255,
            "type": "string",
            "format": "character varying"
          },
          "ListOfficeName": {
            "maxLength": 255,
            "type": "string",
            "format": "character varying"
          },
          "ListPrice": {
            "type": "number",
            "format": "numeric"
          },
          "LivingArea": {
            "type": "number",
            "format": "numeric"
          },
          "LivingAreaSource": {
            "maxLength": 50,
            "type": "string",
            "format": "character varying"
          },
          "LivingAreaUnits": {
            "maxLength": 25,
            "type": "string",
            "format": "character varying"
          },
          "LotSizeSquareFeet": {
            "type": "number",
            "format": "numeric"
          },
          "OccupantType": {
            "maxLength": 50,
            "type": "string",
            "format": "character varying"
          },
          "OpenParkingSpaces": {
            "type": "number",
            "format": "numeric"
          },
          "OpenParkingYN": {
            "type": "boolean",
            "format": "boolean"
          },
          "OtherParking": {
            "maxLength": 1024,
            "type": "string",
            "format": "character varying"
          },
          "OwnerName": {
            "maxLength": 50,
            "type": "string",
            "format": "character varying"
          },
          "ParcelNumber": {
            "maxLength": 50,
            "type": "string",
            "format": "character varying"
          },
          "ParkingTotal": {
            "type": "number",
            "format": "numeric"
          },
          "PoolPrivateYN": {
            "type": "boolean",
            "format": "boolean"
          },
          "PropertySubType": {
            "maxLength": 50,
            "type": "string",
            "format": "character varying"
          },
          "PropertyType": {
            "maxLength": 50,
            "type": "string",
            "format": "character varying"
          },
          "SeniorCommunityYN": {
            "type": "boolean",
            "format": "boolean"
          },
          "Sewer": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "SpaYN": {
            "type": "boolean",
            "format": "boolean"
          },
          "StandardStatus": {
            "maxLength": 25,
            "type": "string",
            "format": "character varying"
          },
          "Stories": {
            "type": "number",
            "format": "numeric"
          },
          "StreetAdditionalInfo": {
            "maxLength": 50,
            "type": "string",
            "format": "character varying"
          },
          "StreetDirPrefix": {
            "maxLength": 15,
            "type": "string",
            "format": "character varying"
          },
          "StreetDirSuffix": {
            "maxLength": 15,
            "type": "string",
            "format": "character varying"
          },
          "StreetNumberNumeric": {
            "type": "number",
            "format": "numeric"
          },
          "StreetSuffix": {
            "maxLength": 25,
            "type": "string",
            "format": "character varying"
          },
          "StreetSuffixModifier": {
            "maxLength": 25,
            "type": "string",
            "format": "character varying"
          },
          "TaxLegalDescription": {
            "maxLength": 6000,
            "type": "string",
            "format": "character varying"
          },
          "TaxOtherAnnualAssessmentAmount": {
            "type": "number",
            "format": "numeric"
          },
          "TaxYear": {
            "type": "number",
            "format": "numeric"
          },
          "Utilities": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "WaterSource": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "YearBuilt": {
            "type": "number",
            "format": "numeric"
          },
          "ConstructionMaterials": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "PowerProductionType": {
            "type": "string",
            "format": "text"
          },
          "TotalActualRent": {
            "type": "number",
            "format": "numeric"
          },
          "LeaseExpiration": {
            "type": "string",
            "format": "date"
          },
          "Notes": {
            "type": "string",
            "format": "text"
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "TaxAnnualAmount": {
            "type": "integer",
            "format": "integer"
          },
          "cbsa_title": {
            "type": "string",
            "description": "used to identify markets",
            "format": "text"
          },
          "ListAgentFirstName": {
            "type": "string",
            "format": "text"
          },
          "ListAgentLastName": {
            "type": "string",
            "format": "text"
          },
          "ListAgentMlsId": {
            "type": "string",
            "format": "text"
          },
          "ListAgentStateLicense": {
            "type": "string",
            "format": "text"
          },
          "ListAgentKey": {
            "type": "string",
            "format": "text"
          },
          "test": {
            "type": "boolean",
            "format": "boolean",
            "description": "set to true s"
          }
        }
      },
      "inventory_properties_request": {
        "type": "object",
        "required": [
          "StreetNumber",
          "StreetName",
          "PostalCity",
          "StateOrProvince",
          "PostalCode",
          "MlsStatus"
        ],
        "properties": {
          "StreetNumber": {
            "maxLength": 25,
            "type": "string",
            "format": "character varying"
          },
          "StreetName": {
            "maxLength": 50,
            "type": "string",
            "format": "character varying"
          },
          "UnitNumber": {
            "maxLength": 25,
            "type": "string",
            "format": "character varying"
          },
          "PostalCity": {
            "maxLength": 50,
            "type": "string",
            "format": "character varying"
          },
          "StateOrProvince": {
            "maxLength": 2,
            "type": "string",
            "format": "character varying"
          },
          "PostalCode": {
            "maxLength": 10,
            "type": "string",
            "format": "character varying"
          },
          "MlsStatus": {
            "maxLength": 50,
            "type": "string",
            "format": "character varying",
            "enum": [
              "On-market",
              "Off-market"
            ]
          },
          "BedroomsTotal": {
            "type": "number",
            "format": "numeric"
          },
          "BathroomsFull": {
            "type": "number",
            "format": "numeric"
          },
          "BathroomsHalf": {
            "type": "number",
            "format": "numeric"
          },
          "LivingArea": {
            "type": "number",
            "format": "numeric"
          },
          "LotSizeSquareFeet": {
            "type": "number",
            "format": "numeric"
          },
          "GarageYN": {
            "type": "boolean",
            "format": "boolean"
          },
          "Longitude": {
            "type": "number",
            "format": "numeric"
          },
          "Latitude": {
            "type": "number",
            "format": "numeric"
          },
          "Notes": {
            "type": "string",
            "format": "text"
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "YearBuilt": {
            "type": "number",
            "format": "numeric"
          },
          "AssociationFee": {
            "type": "number",
            "format": "numeric"
          },
          "AssociationFee2": {
            "type": "number",
            "format": "numeric"
          },
          "AssociationFee2Frequency": {
            "maxLength": 25,
            "type": "string",
            "format": "character varying"
          },
          "AssociationFeeFrequency": {
            "maxLength": 25,
            "type": "string",
            "format": "character varying"
          },
          "AssociationYN": {
            "type": "boolean",
            "format": "boolean"
          },
          "AttachedGarageYN": {
            "type": "boolean",
            "format": "boolean"
          },
          "Basement": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "BasementYN": {
            "type": "boolean",
            "format": "boolean"
          },
          "BathroomsOneQuarter": {
            "type": "number",
            "format": "numeric"
          },
          "BathroomsPartial": {
            "type": "number",
            "format": "numeric"
          },
          "BathroomsThreeQuarter": {
            "type": "number",
            "format": "numeric"
          },
          "CarportSpaces": {
            "type": "number",
            "format": "numeric"
          },
          "CarportYN": {
            "type": "boolean",
            "format": "boolean"
          },
          "City": {
            "maxLength": 50,
            "type": "string",
            "format": "character varying"
          },
          "CountyOrParish": {
            "maxLength": 50,
            "type": "string",
            "format": "character varying"
          },
          "CoveredSpaces": {
            "type": "number",
            "format": "numeric"
          },
          "GarageSpaces": {
            "type": "number",
            "format": "numeric"
          },
          "HistoryTransactional": {
            "maxLength": 255,
            "type": "string",
            "format": "character varying"
          },
          "Levels": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "ListAgent": {
            "maxLength": 255,
            "type": "string",
            "format": "character varying"
          },
          "ListAgentDirectPhone": {
            "maxLength": 16,
            "type": "string",
            "format": "character varying"
          },
          "ListAgentEmail": {
            "maxLength": 80,
            "type": "string",
            "format": "character varying"
          },
          "ListAgentFullName": {
            "maxLength": 150,
            "type": "string",
            "format": "character varying"
          },
          "ListOffice": {
            "maxLength": 255,
            "type": "string",
            "format": "character varying"
          },
          "ListOfficeName": {
            "maxLength": 255,
            "type": "string",
            "format": "character varying"
          },
          "ListPrice": {
            "type": "number",
            "format": "numeric"
          },
          "LivingAreaSource": {
            "maxLength": 50,
            "type": "string",
            "format": "character varying"
          },
          "LivingAreaUnits": {
            "maxLength": 25,
            "type": "string",
            "format": "character varying"
          },
          "OccupantType": {
            "maxLength": 50,
            "type": "string",
            "format": "character varying"
          },
          "OpenParkingSpaces": {
            "type": "number",
            "format": "numeric"
          },
          "OpenParkingYN": {
            "type": "boolean",
            "format": "boolean"
          },
          "OtherParking": {
            "maxLength": 1024,
            "type": "string",
            "format": "character varying"
          },
          "OwnerName": {
            "maxLength": 50,
            "type": "string",
            "format": "character varying"
          },
          "ParcelNumber": {
            "maxLength": 50,
            "type": "string",
            "format": "character varying"
          },
          "ParkingTotal": {
            "type": "number",
            "format": "numeric"
          },
          "PoolPrivateYN": {
            "type": "boolean",
            "format": "boolean"
          },
          "PropertySubType": {
            "maxLength": 50,
            "type": "string",
            "format": "character varying"
          },
          "PropertyType": {
            "maxLength": 50,
            "type": "string",
            "format": "character varying"
          },
          "SeniorCommunityYN": {
            "type": "boolean",
            "format": "boolean"
          },
          "Sewer": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "SpaYN": {
            "type": "boolean",
            "format": "boolean"
          },
          "StandardStatus": {
            "maxLength": 25,
            "type": "string",
            "format": "character varying"
          },
          "Stories": {
            "type": "number",
            "format": "numeric"
          },
          "StreetAdditionalInfo": {
            "maxLength": 50,
            "type": "string",
            "format": "character varying"
          },
          "StreetDirPrefix": {
            "maxLength": 15,
            "type": "string",
            "format": "character varying"
          },
          "StreetDirSuffix": {
            "maxLength": 15,
            "type": "string",
            "format": "character varying"
          },
          "StreetNumberNumeric": {
            "type": "number",
            "format": "numeric"
          },
          "StreetSuffix": {
            "maxLength": 25,
            "type": "string",
            "format": "character varying"
          },
          "StreetSuffixModifier": {
            "maxLength": 25,
            "type": "string",
            "format": "character varying"
          },
          "TaxLegalDescription": {
            "maxLength": 6000,
            "type": "string",
            "format": "character varying"
          },
          "TaxOtherAnnualAssessmentAmount": {
            "type": "number",
            "format": "numeric"
          },
          "TaxYear": {
            "type": "number",
            "format": "numeric"
          },
          "Utilities": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "WaterSource": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "ConstructionMaterials": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "PowerProductionType": {
            "type": "string",
            "format": "text"
          },
          "TotalActualRent": {
            "type": "number",
            "format": "numeric"
          },
          "LeaseExpiration": {
            "type": "string",
            "format": "date"
          },
          "inventory_password": {
            "type": "integer",
            "format": "integer"
          },
          "inventory_hash": {
            "type": "string",
            "format": "text"
          },
          "TaxAnnualAmount": {
            "type": "integer",
            "format": "integer"
          },
          "cbsa_title": {
            "type": "string",
            "description": "used to identify markets",
            "format": "text"
          },
          "ListAgentFirstName": {
            "type": "string",
            "format": "text"
          },
          "ListAgentLastName": {
            "type": "string",
            "format": "text"
          },
          "ListAgentMlsId": {
            "type": "string",
            "format": "text"
          },
          "ListAgentStateLicense": {
            "type": "string",
            "format": "text"
          },
          "ListAgentKey": {
            "type": "string",
            "format": "text"
          },
          "test": {
            "type": "boolean",
            "format": "boolean",
            "description": "set to true s"
          }
        }
      },
      "Error": {
        "required": [
          "error",
          "message"
        ],
        "type": "object",
        "properties": {
          "error": {
            "type": "integer",
            "format": "int32"
          },
          "message": {
            "type": "string"
          }
        }
      }
    },
    "securitySchemes": {
      "ApiKeyAuth": {
        "type": "apiKey",
        "in": "header",
        "name": "Authorization"
      }
    }
  }
}